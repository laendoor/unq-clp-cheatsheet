{
  "ax_v":    { "prefix": "axv",       "body": "\\infer[ax_v]{$1}{}"  },
  "ax_c":    { "prefix": "axc",       "body": "\\infer[ax_c]{$1}{}"  },
  "\\vdash": { "prefix": ["context"], "body": "\\vdash "  },
  "\\infer": { "prefix": "infer",     "body": "\\infer[]\n\t{$1}\n\t{$2}" },

  "\\Gamma \\vdash":    { "prefix": ["gamma-context"],  "body": "\\Gamma \\vdash "  },
  "\\begin{align*}":    { "prefix": "align",            "body": "\\begin{align*}\n\t& $1\n\\end{align*}"  },
  "\\begin{equation*}": { "prefix": "equation",         "body": "\\begin{equation*}\n\t$1\n\\end{equation*}"  },
  "\\begin{enumerate}": { "prefix": "enumerate",        "body": "\\begin{enumerate}\n\t\\item $1\n\\end{enumerate}"  },
  "\\begin{itemize}":   { "prefix": "itemize",          "body": "\\begin{itemize}\n\t\\item $1\n\\end{itemize}"  },
  "\\rightarrow":       { "prefix": "arrow",            "body": "\\rightarrow"  },
  "\\rightsquigarrow":  { "prefix": "squidarrow",       "body": "\\rightsquigarrow"  },
  "\\Rightarrow":       { "prefix": ["then", "flecha"], "body": "\\then "  },

  "if zero": { "prefix": "ifz", "body": "\\ifz z t e"  },
  "let":     { "prefix": "let", "body": "\\letl x u t"  },
  "mathsf":  { "prefix": "sf",  "body": "\\s{$1}"      },

  "\\nat":     { "prefix": "nat",     "body": "\\nat "           },
  "\\Gamma":   { "prefix": "gamma",   "body": "\\Gamma "         },
  "\\Add":     { "prefix": "add",     "body": "\\Add "           },
  "\\Apply":   { "prefix": "apply",   "body": "\\Apply "         },
  "\\Div":     { "prefix": "div",     "body": "\\Div "           },
  "\\Extend":  { "prefix": "extend",  "body": "\\Extend "        },
  "\\Ldi":     { "prefix": "ldi",     "body": "\\Ldi {$1} "      },
  "\\Mkclos":  { "prefix": "mkclos",  "body": "\\Mkclos {$1}"    },
  "\\Mult":    { "prefix": "mult",    "body": "\\Mult "          },
  "\\Popenv":  { "prefix": "popenv",  "body": "\\Popenv "        },
  "\\Push":    { "prefix": "push",    "body": "\\Push "          },
  "\\Pushenv": { "prefix": "pushenv", "body": "\\Pushenv "       },
  "\\Search":  { "prefix": "search",  "body": "\\Search {$1}"    },
  "\\Sub":     { "prefix": "sub",     "body": "\\Sub "           },
  "\\Test":    { "prefix": "test",    "body": "\\Test {$1} {$2}" },

  "Compile expression":  { "prefix": "compile-expr",   "body": "\\Search n" },
  "Compile application": { "prefix": "compile-app",    "body": "\\Pushenv;\n|u|_{e};\n\\Push;\n|t|_{e};\n\\Apply;\n\\Popenv" },
  "Compile function":    { "prefix": "compile-fun",    "body": "\\Mkclos {|t|_{e\\concats[\\_,x]}}" },
  "Compile fixfun":      { "prefix": "compile-fixfun", "body": "\\Mkclos {|t|_{e\\concats[f,x]}}" },
  "Compile number":      { "prefix": "compile-number", "body": "\\Ldi n" },
  "Compile sum":         { "prefix": "compile-sum",    "body": "|u|_{e};\n\\Push;\n|t|_{e};\n\\Add" },
  "Compile sub":         { "prefix": "compile-sub",    "body": "|u|_{e};\n\\Push;\n|t|_{e};\n\\Sub" },
  "Compile mult":        { "prefix": "compile-mult",   "body": "|u|_{e};\n\\Push;\n|t|_{e};\n\\Mult" },
  "Compile div":         { "prefix": "compile-div",    "body": "|u|_{e};\n\\Push;\n|t|_{e};\n\\Div" },
  "Compile ifz":         { "prefix": "compile-ifz",    "body": "|t|_{e};\n\\Test {|u|_{e}} {|v|_{e}})" },
  "Compile let":         { "prefix": "compile-let",    "body": "\\Pushenv;\n|t|_{e};\n\\Extend;\n|u|_{e\\concats [x]};\n\\Popenv" },

  "semantic expression":  { "prefix": "sem-expr", "body": "\\theta(x)" },
  "semantic function":    { "prefix": "sem-fun",  "body": "\\funSem{a}{A}{\\semT[\\theta,x=a]{t}}" },
  "semantic application": { "prefix": "sem-app",  "body": "\\funSem{a}{A}{\\semT[\\theta,x=a]{t}}" },
  "semantic number":      { "prefix": "sem-num",  "body": "n" },
  "semantic operation":   { "prefix": "sem-oper", "body": "\\semT{t} \\otimes \\semT{r}" },
  "semantic ifz":         { "prefix": "sem-ifz",  "body": "\\left\\{\\begin{array}{ll}\n\t\\semT{r} & \\textrm{si }\\semT{t} = 0 \\\\\n\t\\semT{s} & \\textrm{si }\\semT{t} \\in \\mathbb{N^*} \\\\\n\t\\bot_{A} & \\textrm{si }\\semT{t} = \\bot_{\\mathbb N} \\textrm{ y $A$ es el tipo del t√©rmino}\n\\end{array}\\right." },
  "semantic let":         { "prefix": "sem-let",  "body": "\\semT[\\theta,x=\\semT{r}]{t}" },
  "semantic fixfun":      { "prefix": "sem-fix",  "body": "\\FIX(\\funSem{a}{A}{\\semT[\\theta,x=a]{t}})" }
}
